//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
<<<<<<< HEAD
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("conPassModel", "FK_Cards_CardStatusTypes", "CardStatusTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.CardStatusTypes), "Cards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Cards), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Cards_Persons", "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Persons), "Cards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Cards), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Controllers_ControllerTypes", "ControllerTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.ControllerTypes), "Controllers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Controllers), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Doors_Controllers", "Controllers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Controllers), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Persons_Departments", "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Departments), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Doors_DoorModeTypes", "DoorModeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.DoorModeTypes), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Doors_Schedules", "Schedules", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Schedules), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Persons_EmployeeTypes", "EmployeeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.EmployeeTypes), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Persons_RoleTypes", "RoleTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.RoleTypes), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_ScheduleRanges_Schedules", "Schedules", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Schedules), "ScheduleRanges", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.ScheduleRanges), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "AccessGroupDoors", "AccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.AccessGroups), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors))]
[assembly: EdmRelationshipAttribute("conPassModel", "PersonAccessGroups", "AccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.AccessGroups), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons))]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_VerifyMessages_Controllers", "Controllers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Controllers), "VerifyMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.VerifyMessages), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_VerifyMessages_ControllerTypes", "ControllerTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.ControllerTypes), "VerifyMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.VerifyMessages), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Events_EventTypes", "EventTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.EventTypes), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Events), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_VerifyMessages_VerifyResults", "VerifyResults", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.VerifyResults), "VerifyMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.VerifyMessages), true)]
[assembly: EdmRelationshipAttribute("conPassModel", "AccessGroupDoorGroups", "AccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.AccessGroups), "DoorGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.DoorGroups))]
[assembly: EdmRelationshipAttribute("conPassModel", "DoorGroupDoors", "DoorGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.DoorGroups), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors))]
[assembly: EdmRelationshipAttribute("conPassModel", "FK_Persons_Documents", "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ConPassEntityDataModel.Documents), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons), true)]
=======
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Cards_CardStatusTypes", "CardStatusTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.CardStatusTypes), "Cards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Cards), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Cards_Persons", "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Persons), "Cards", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Cards), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Controllers_ControllerTypes", "ControllerTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.ControllerTypes), "Controllers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Controllers), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Doors_Controllers", "Controllers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Controllers), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_VerifyMessages_Controllers", "Controllers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Controllers), "VerifyMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.VerifyMessages), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_VerifyMessages_ControllerTypes", "ControllerTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.ControllerTypes), "VerifyMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.VerifyMessages), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Persons_Departments", "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Departments), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Documents_DocumentTypes", "DocumentTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.DocumentTypes), "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ConPassEntityDataModel.Documents), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Persons_Documents", "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ConPassEntityDataModel.Documents), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Doors_DoorModeTypes", "DoorModeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.DoorModeTypes), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Doors_Schedules", "Schedules", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Schedules), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Persons_EmployeeTypes", "EmployeeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.EmployeeTypes), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Events_EventTypes", "EventTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.EventTypes), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Events), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Persons_RoleTypes", "RoleTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.RoleTypes), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_ScheduleRanges_Schedules", "Schedules", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.Schedules), "ScheduleRanges", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.ScheduleRanges), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_VerifyMessages_VerifyResults", "VerifyResults", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.VerifyResults), "VerifyMessages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.VerifyMessages), true)]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "AccessGroupDoorGroups", "AccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.AccessGroups), "DoorGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.DoorGroups))]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "AccessGroupDoors", "AccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.AccessGroups), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors))]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "DoorGroupDoors", "DoorGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.DoorGroups), "Doors", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Doors))]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "PersonAccessGroups", "AccessGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.AccessGroups), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Persons))]
[assembly: EdmRelationshipAttribute("ConPassEntityDataModel", "FK_Documents_DocumentTypes1", "DocumentTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ConPassEntityDataModel.DocumentTypes), "Documents", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ConPassEntityDataModel.Documents), true)]
>>>>>>> GetPeoples

#endregion

namespace ConPassEntityDataModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class conPassEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new conPassEntities object using the connection string found in the 'conPassEntities' section of the application configuration file.
        /// </summary>
        public conPassEntities() : base("name=conPassEntities", "conPassEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new conPassEntities object.
        /// </summary>
        public conPassEntities(string connectionString) : base(connectionString, "conPassEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new conPassEntities object.
        /// </summary>
        public conPassEntities(EntityConnection connection) : base(connection, "conPassEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccessGroups> AccessGroups
        {
            get
            {
                if ((_AccessGroups == null))
                {
                    _AccessGroups = base.CreateObjectSet<AccessGroups>("AccessGroups");
                }
                return _AccessGroups;
            }
        }
        private ObjectSet<AccessGroups> _AccessGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cards> Cards
        {
            get
            {
                if ((_Cards == null))
                {
                    _Cards = base.CreateObjectSet<Cards>("Cards");
                }
                return _Cards;
            }
        }
        private ObjectSet<Cards> _Cards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CardStatusTypes> CardStatusTypes
        {
            get
            {
                if ((_CardStatusTypes == null))
                {
                    _CardStatusTypes = base.CreateObjectSet<CardStatusTypes>("CardStatusTypes");
                }
                return _CardStatusTypes;
            }
        }
        private ObjectSet<CardStatusTypes> _CardStatusTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Controllers> Controllers
        {
            get
            {
                if ((_Controllers == null))
                {
                    _Controllers = base.CreateObjectSet<Controllers>("Controllers");
                }
                return _Controllers;
            }
        }
        private ObjectSet<Controllers> _Controllers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ControllerTypes> ControllerTypes
        {
            get
            {
                if ((_ControllerTypes == null))
                {
                    _ControllerTypes = base.CreateObjectSet<ControllerTypes>("ControllerTypes");
                }
                return _ControllerTypes;
            }
        }
        private ObjectSet<ControllerTypes> _ControllerTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Departments> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Departments>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Departments> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DoorModeTypes> DoorModeTypes
        {
            get
            {
                if ((_DoorModeTypes == null))
                {
                    _DoorModeTypes = base.CreateObjectSet<DoorModeTypes>("DoorModeTypes");
                }
                return _DoorModeTypes;
            }
        }
        private ObjectSet<DoorModeTypes> _DoorModeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doors> Doors
        {
            get
            {
                if ((_Doors == null))
                {
                    _Doors = base.CreateObjectSet<Doors>("Doors");
                }
                return _Doors;
            }
        }
        private ObjectSet<Doors> _Doors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeTypes> EmployeeTypes
        {
            get
            {
                if ((_EmployeeTypes == null))
                {
                    _EmployeeTypes = base.CreateObjectSet<EmployeeTypes>("EmployeeTypes");
                }
                return _EmployeeTypes;
            }
        }
        private ObjectSet<EmployeeTypes> _EmployeeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Persons> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Persons>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Persons> _Persons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleTypes> RoleTypes
        {
            get
            {
                if ((_RoleTypes == null))
                {
                    _RoleTypes = base.CreateObjectSet<RoleTypes>("RoleTypes");
                }
                return _RoleTypes;
            }
        }
        private ObjectSet<RoleTypes> _RoleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduleRanges> ScheduleRanges
        {
            get
            {
                if ((_ScheduleRanges == null))
                {
                    _ScheduleRanges = base.CreateObjectSet<ScheduleRanges>("ScheduleRanges");
                }
                return _ScheduleRanges;
            }
        }
        private ObjectSet<ScheduleRanges> _ScheduleRanges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Schedules> Schedules
        {
            get
            {
                if ((_Schedules == null))
                {
                    _Schedules = base.CreateObjectSet<Schedules>("Schedules");
                }
                return _Schedules;
            }
        }
        private ObjectSet<Schedules> _Schedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DoorGroups> DoorGroups
        {
            get
            {
                if ((_DoorGroups == null))
                {
                    _DoorGroups = base.CreateObjectSet<DoorGroups>("DoorGroups");
                }
                return _DoorGroups;
            }
        }
        private ObjectSet<DoorGroups> _DoorGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Events> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Events>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Events> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventTypes> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventTypes>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventTypes> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VerifyMessages> VerifyMessages
        {
            get
            {
                if ((_VerifyMessages == null))
                {
                    _VerifyMessages = base.CreateObjectSet<VerifyMessages>("VerifyMessages");
                }
                return _VerifyMessages;
            }
        }
        private ObjectSet<VerifyMessages> _VerifyMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VerifyResults> VerifyResults
        {
            get
            {
                if ((_VerifyResults == null))
                {
                    _VerifyResults = base.CreateObjectSet<VerifyResults>("VerifyResults");
                }
                return _VerifyResults;
            }
        }
        private ObjectSet<VerifyResults> _VerifyResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CardsHistory> CardsHistory
        {
            get
            {
                if ((_CardsHistory == null))
                {
                    _CardsHistory = base.CreateObjectSet<CardsHistory>("CardsHistory");
                }
                return _CardsHistory;
            }
        }
        private ObjectSet<CardsHistory> _CardsHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentTypes> DocumentTypes
        {
            get
            {
                if ((_DocumentTypes == null))
                {
                    _DocumentTypes = base.CreateObjectSet<DocumentTypes>("DocumentTypes");
                }
                return _DocumentTypes;
            }
        }
        private ObjectSet<DocumentTypes> _DocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Documents> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Documents>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Documents> _Documents;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccessGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccessGroups(AccessGroups accessGroups)
        {
            base.AddObject("AccessGroups", accessGroups);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCards(Cards cards)
        {
            base.AddObject("Cards", cards);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CardStatusTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCardStatusTypes(CardStatusTypes cardStatusTypes)
        {
            base.AddObject("CardStatusTypes", cardStatusTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Controllers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToControllers(Controllers controllers)
        {
            base.AddObject("Controllers", controllers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ControllerTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToControllerTypes(ControllerTypes controllerTypes)
        {
            base.AddObject("ControllerTypes", controllerTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Departments departments)
        {
            base.AddObject("Departments", departments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DoorModeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoorModeTypes(DoorModeTypes doorModeTypes)
        {
            base.AddObject("DoorModeTypes", doorModeTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoors(Doors doors)
        {
            base.AddObject("Doors", doors);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeTypes(EmployeeTypes employeeTypes)
        {
            base.AddObject("EmployeeTypes", employeeTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersons(Persons persons)
        {
            base.AddObject("Persons", persons);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleTypes(RoleTypes roleTypes)
        {
            base.AddObject("RoleTypes", roleTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScheduleRanges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScheduleRanges(ScheduleRanges scheduleRanges)
        {
            base.AddObject("ScheduleRanges", scheduleRanges);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Schedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchedules(Schedules schedules)
        {
            base.AddObject("Schedules", schedules);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DoorGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoorGroups(DoorGroups doorGroups)
        {
            base.AddObject("DoorGroups", doorGroups);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Events events)
        {
            base.AddObject("Events", events);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventTypes eventTypes)
        {
            base.AddObject("EventTypes", eventTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VerifyMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVerifyMessages(VerifyMessages verifyMessages)
        {
            base.AddObject("VerifyMessages", verifyMessages);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VerifyResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVerifyResults(VerifyResults verifyResults)
        {
            base.AddObject("VerifyResults", verifyResults);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CardsHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCardsHistory(CardsHistory cardsHistory)
        {
            base.AddObject("CardsHistory", cardsHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTypes(DocumentTypes documentTypes)
        {
            base.AddObject("DocumentTypes", documentTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Documents documents)
        {
            base.AddObject("Documents", documents);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="AccessGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccessGroups : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccessGroups object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AccessGroups CreateAccessGroups(global::System.Int32 id, global::System.String name)
        {
            AccessGroups accessGroups = new AccessGroups();
            accessGroups.ID = id;
            accessGroups.Name = name;
            return accessGroups;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "AccessGroupDoors", "Doors")]
        public EntityCollection<Doors> Doors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doors>("conPassModel.AccessGroupDoors", "Doors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doors>("conPassModel.AccessGroupDoors", "Doors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "PersonAccessGroups", "Persons")]
        public EntityCollection<Persons> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Persons>("conPassModel.PersonAccessGroups", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Persons>("conPassModel.PersonAccessGroups", "Persons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "AccessGroupDoorGroups", "DoorGroups")]
        public EntityCollection<DoorGroups> DoorGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DoorGroups>("conPassModel.AccessGroupDoorGroups", "DoorGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DoorGroups>("conPassModel.AccessGroupDoorGroups", "DoorGroups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="Cards")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cards : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cards object.
        /// </summary>
        /// <param name="siteCode">Initial value of the SiteCode property.</param>
        /// <param name="cardNumber">Initial value of the CardNumber property.</param>
        /// <param name="cardStatusTypeID">Initial value of the CardStatusTypeID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static Cards CreateCards(global::System.Int32 siteCode, global::System.Int32 cardNumber, global::System.Int32 cardStatusTypeID, global::System.Int32 personID)
        {
            Cards cards = new Cards();
            cards.SiteCode = siteCode;
            cards.CardNumber = cardNumber;
            cards.CardStatusTypeID = cardStatusTypeID;
            cards.PersonID = personID;
            return cards;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteCode
        {
            get
            {
                return _SiteCode;
            }
            set
            {
                if (_SiteCode != value)
                {
                    OnSiteCodeChanging(value);
                    ReportPropertyChanging("SiteCode");
                    _SiteCode = StructuralObject.SetValidValue(value, "SiteCode");
                    ReportPropertyChanged("SiteCode");
                    OnSiteCodeChanged();
                }
            }
        }
        private global::System.Int32 _SiteCode;
        partial void OnSiteCodeChanging(global::System.Int32 value);
        partial void OnSiteCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                if (_CardNumber != value)
                {
                    OnCardNumberChanging(value);
                    ReportPropertyChanging("CardNumber");
                    _CardNumber = StructuralObject.SetValidValue(value, "CardNumber");
                    ReportPropertyChanged("CardNumber");
                    OnCardNumberChanged();
                }
            }
        }
        private global::System.Int32 _CardNumber;
        partial void OnCardNumberChanging(global::System.Int32 value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardStatusTypeID
        {
            get
            {
                return _CardStatusTypeID;
            }
            set
            {
                OnCardStatusTypeIDChanging(value);
                ReportPropertyChanging("CardStatusTypeID");
                _CardStatusTypeID = StructuralObject.SetValidValue(value, "CardStatusTypeID");
                ReportPropertyChanged("CardStatusTypeID");
                OnCardStatusTypeIDChanged();
            }
        }
        private global::System.Int32 _CardStatusTypeID;
        partial void OnCardStatusTypeIDChanging(global::System.Int32 value);
        partial void OnCardStatusTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Cards_CardStatusTypes", "CardStatusTypes")]
        public CardStatusTypes CardStatusTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CardStatusTypes>("conPassModel.FK_Cards_CardStatusTypes", "CardStatusTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CardStatusTypes>("conPassModel.FK_Cards_CardStatusTypes", "CardStatusTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CardStatusTypes> CardStatusTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CardStatusTypes>("conPassModel.FK_Cards_CardStatusTypes", "CardStatusTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CardStatusTypes>("conPassModel.FK_Cards_CardStatusTypes", "CardStatusTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Cards_Persons", "Persons")]
        public Persons Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persons>("conPassModel.FK_Cards_Persons", "Persons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persons>("conPassModel.FK_Cards_Persons", "Persons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Persons> PersonsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Persons>("conPassModel.FK_Cards_Persons", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Persons>("conPassModel.FK_Cards_Persons", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="CardsHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardsHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardsHistory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="siteCode">Initial value of the SiteCode property.</param>
        /// <param name="cardNumber">Initial value of the CardNumber property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="issuedOn">Initial value of the IssuedOn property.</param>
        /// <param name="validThru">Initial value of the ValidThru property.</param>
        public static CardsHistory CreateCardsHistory(global::System.Int32 id, global::System.Int32 siteCode, global::System.Int32 cardNumber, global::System.Int32 personID, global::System.DateTime issuedOn, global::System.DateTime validThru)
        {
            CardsHistory cardsHistory = new CardsHistory();
            cardsHistory.ID = id;
            cardsHistory.SiteCode = siteCode;
            cardsHistory.CardNumber = cardNumber;
            cardsHistory.PersonID = personID;
            cardsHistory.IssuedOn = issuedOn;
            cardsHistory.ValidThru = validThru;
            return cardsHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteCode
        {
            get
            {
                return _SiteCode;
            }
            set
            {
                OnSiteCodeChanging(value);
                ReportPropertyChanging("SiteCode");
                _SiteCode = StructuralObject.SetValidValue(value, "SiteCode");
                ReportPropertyChanged("SiteCode");
                OnSiteCodeChanged();
            }
        }
        private global::System.Int32 _SiteCode;
        partial void OnSiteCodeChanging(global::System.Int32 value);
        partial void OnSiteCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, "CardNumber");
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private global::System.Int32 _CardNumber;
        partial void OnCardNumberChanging(global::System.Int32 value);
        partial void OnCardNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IssuedOn
        {
            get
            {
                return _IssuedOn;
            }
            set
            {
                OnIssuedOnChanging(value);
                ReportPropertyChanging("IssuedOn");
                _IssuedOn = StructuralObject.SetValidValue(value, "IssuedOn");
                ReportPropertyChanged("IssuedOn");
                OnIssuedOnChanged();
            }
        }
        private global::System.DateTime _IssuedOn;
        partial void OnIssuedOnChanging(global::System.DateTime value);
        partial void OnIssuedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidThru
        {
            get
            {
                return _ValidThru;
            }
            set
            {
                OnValidThruChanging(value);
                ReportPropertyChanging("ValidThru");
                _ValidThru = StructuralObject.SetValidValue(value, "ValidThru");
                ReportPropertyChanged("ValidThru");
                OnValidThruChanged();
            }
        }
        private global::System.DateTime _ValidThru;
        partial void OnValidThruChanging(global::System.DateTime value);
        partial void OnValidThruChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="CardStatusTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CardStatusTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CardStatusTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="nickName">Initial value of the NickName property.</param>
        public static CardStatusTypes CreateCardStatusTypes(global::System.Int32 id, global::System.String name, global::System.String nickName)
        {
            CardStatusTypes cardStatusTypes = new CardStatusTypes();
            cardStatusTypes.ID = id;
            cardStatusTypes.Name = name;
            cardStatusTypes.NickName = nickName;
            return cardStatusTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, false, "NickName");
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Cards_CardStatusTypes", "Cards")]
        public EntityCollection<Cards> Cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cards>("conPassModel.FK_Cards_CardStatusTypes", "Cards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cards>("conPassModel.FK_Cards_CardStatusTypes", "Cards", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="Controllers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Controllers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Controllers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="controllerTypeID">Initial value of the ControllerTypeID property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Controllers CreateControllers(global::System.Int32 id, global::System.String name, global::System.Int32 controllerTypeID, global::System.String address)
        {
            Controllers controllers = new Controllers();
            controllers.ID = id;
            controllers.Name = name;
            controllers.ControllerTypeID = controllerTypeID;
            controllers.Address = address;
            return controllers;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ControllerTypeID
        {
            get
            {
                return _ControllerTypeID;
            }
            set
            {
                OnControllerTypeIDChanging(value);
                ReportPropertyChanging("ControllerTypeID");
                _ControllerTypeID = StructuralObject.SetValidValue(value, "ControllerTypeID");
                ReportPropertyChanged("ControllerTypeID");
                OnControllerTypeIDChanged();
            }
        }
        private global::System.Int32 _ControllerTypeID;
        partial void OnControllerTypeIDChanging(global::System.Int32 value);
        partial void OnControllerTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Controllers_ControllerTypes", "ControllerTypes")]
        public ControllerTypes ControllerTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ControllerTypes>("conPassModel.FK_Controllers_ControllerTypes", "ControllerTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ControllerTypes>("conPassModel.FK_Controllers_ControllerTypes", "ControllerTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ControllerTypes> ControllerTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ControllerTypes>("conPassModel.FK_Controllers_ControllerTypes", "ControllerTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ControllerTypes>("conPassModel.FK_Controllers_ControllerTypes", "ControllerTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Doors_Controllers", "Doors")]
        public EntityCollection<Doors> Doors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doors>("conPassModel.FK_Doors_Controllers", "Doors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doors>("conPassModel.FK_Doors_Controllers", "Doors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_VerifyMessages_Controllers", "VerifyMessages")]
        public EntityCollection<VerifyMessages> VerifyMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VerifyMessages>("conPassModel.FK_VerifyMessages_Controllers", "VerifyMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VerifyMessages>("conPassModel.FK_VerifyMessages_Controllers", "VerifyMessages", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="ControllerTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ControllerTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ControllerTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ControllerTypes CreateControllerTypes(global::System.Int32 id, global::System.String name)
        {
            ControllerTypes controllerTypes = new ControllerTypes();
            controllerTypes.ID = id;
            controllerTypes.Name = name;
            return controllerTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Controllers_ControllerTypes", "Controllers")]
        public EntityCollection<Controllers> Controllers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Controllers>("conPassModel.FK_Controllers_ControllerTypes", "Controllers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Controllers>("conPassModel.FK_Controllers_ControllerTypes", "Controllers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_VerifyMessages_ControllerTypes", "VerifyMessages")]
        public EntityCollection<VerifyMessages> VerifyMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VerifyMessages>("conPassModel.FK_VerifyMessages_ControllerTypes", "VerifyMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VerifyMessages>("conPassModel.FK_VerifyMessages_ControllerTypes", "VerifyMessages", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="Departments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Departments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Departments object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Departments CreateDepartments(global::System.Int32 id, global::System.String name)
        {
            Departments departments = new Departments();
            departments.ID = id;
            departments.Name = name;
            return departments;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Persons_Departments", "Persons")]
        public EntityCollection<Persons> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Persons>("conPassModel.FK_Persons_Departments", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Persons>("conPassModel.FK_Persons_Departments", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="Documents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Documents : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Documents object.
        /// </summary>
        /// <param name="documentID">Initial value of the DocumentID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Documents CreateDocuments(global::System.Int32 documentID, global::System.Int32 type)
        {
            Documents documents = new Documents();
            documents.DocumentID = documentID;
            documents.Type = type;
            return documents;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentID
        {
            get
            {
                return _DocumentID;
            }
            set
            {
                if (_DocumentID != value)
                {
                    OnDocumentIDChanging(value);
                    ReportPropertyChanging("DocumentID");
                    _DocumentID = StructuralObject.SetValidValue(value, "DocumentID");
                    ReportPropertyChanged("DocumentID");
                    OnDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _DocumentID;
        partial void OnDocumentIDChanging(global::System.Int32 value);
        partial void OnDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Series
        {
            get
            {
                return _Series;
            }
            set
            {
                OnSeriesChanging(value);
                ReportPropertyChanging("Series");
                _Series = StructuralObject.SetValidValue(value, true, "Series");
                ReportPropertyChanged("Series");
                OnSeriesChanged();
            }
        }
        private global::System.String _Series;
        partial void OnSeriesChanging(global::System.String value);
        partial void OnSeriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Issued
        {
            get
            {
                return _Issued;
            }
            set
            {
                OnIssuedChanging(value);
                ReportPropertyChanging("Issued");
                _Issued = StructuralObject.SetValidValue(value, true, "Issued");
                ReportPropertyChanged("Issued");
                OnIssuedChanged();
            }
        }
        private global::System.String _Issued;
        partial void OnIssuedChanging(global::System.String value);
        partial void OnIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value, "IssueDate");
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssueDate;
        partial void OnIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value, "ExpireDate");
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireDate;
        partial void OnExpireDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Persons_Documents", "Persons")]
        public EntityCollection<Persons> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Persons>("conPassModel.FK_Persons_Documents", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Persons>("conPassModel.FK_Persons_Documents", "Persons", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConPassEntityDataModel", "FK_Documents_DocumentTypes1", "DocumentTypes")]
        public DocumentTypes DocumentTypes1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentTypes>("ConPassEntityDataModel.FK_Documents_DocumentTypes1", "DocumentTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentTypes>("ConPassEntityDataModel.FK_Documents_DocumentTypes1", "DocumentTypes").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentTypes> DocumentTypes1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentTypes>("ConPassEntityDataModel.FK_Documents_DocumentTypes1", "DocumentTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentTypes>("ConPassEntityDataModel.FK_Documents_DocumentTypes1", "DocumentTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="DocumentTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DocumentTypes CreateDocumentTypes(global::System.Int32 id, global::System.String name)
        {
            DocumentTypes documentTypes = new DocumentTypes();
            documentTypes.ID = id;
            documentTypes.Name = name;
            return documentTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

<<<<<<< HEAD
=======
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConPassEntityDataModel", "FK_Documents_DocumentTypes", "Documents")]
        public Documents Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Documents>("ConPassEntityDataModel.FK_Documents_DocumentTypes", "Documents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Documents>("ConPassEntityDataModel.FK_Documents_DocumentTypes", "Documents").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Documents> DocumentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Documents>("ConPassEntityDataModel.FK_Documents_DocumentTypes", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Documents>("ConPassEntityDataModel.FK_Documents_DocumentTypes", "Documents", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConPassEntityDataModel", "FK_Documents_DocumentTypes1", "Documents")]
        public EntityCollection<Documents> Documents1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Documents>("ConPassEntityDataModel.FK_Documents_DocumentTypes1", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Documents>("ConPassEntityDataModel.FK_Documents_DocumentTypes1", "Documents", value);
                }
            }
        }

        #endregion

>>>>>>> GetPeoples
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="DoorGroups")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DoorGroups : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DoorGroups object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DoorGroups CreateDoorGroups(global::System.Int32 id, global::System.String name)
        {
            DoorGroups doorGroups = new DoorGroups();
            doorGroups.ID = id;
            doorGroups.Name = name;
            return doorGroups;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "AccessGroupDoorGroups", "AccessGroups")]
        public EntityCollection<AccessGroups> AccessGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessGroups>("conPassModel.AccessGroupDoorGroups", "AccessGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessGroups>("conPassModel.AccessGroupDoorGroups", "AccessGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "DoorGroupDoors", "Doors")]
        public EntityCollection<Doors> Doors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doors>("conPassModel.DoorGroupDoors", "Doors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doors>("conPassModel.DoorGroupDoors", "Doors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="DoorModeTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DoorModeTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DoorModeTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DoorModeTypes CreateDoorModeTypes(global::System.Int32 id, global::System.String name)
        {
            DoorModeTypes doorModeTypes = new DoorModeTypes();
            doorModeTypes.ID = id;
            doorModeTypes.Name = name;
            return doorModeTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Doors_DoorModeTypes", "Doors")]
        public EntityCollection<Doors> Doors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doors>("conPassModel.FK_Doors_DoorModeTypes", "Doors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doors>("conPassModel.FK_Doors_DoorModeTypes", "Doors", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="Doors")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doors : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doors object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="controllerID">Initial value of the ControllerID property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="doorModeTypeID">Initial value of the DoorModeTypeID property.</param>
        /// <param name="scheduleID">Initial value of the ScheduleID property.</param>
        public static Doors CreateDoors(global::System.Int32 id, global::System.String name, global::System.Int32 controllerID, global::System.String address, global::System.Int32 doorModeTypeID, global::System.Int32 scheduleID)
        {
            Doors doors = new Doors();
            doors.ID = id;
            doors.Name = name;
            doors.ControllerID = controllerID;
            doors.Address = address;
            doors.DoorModeTypeID = doorModeTypeID;
            doors.ScheduleID = scheduleID;
            return doors;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ControllerID
        {
            get
            {
                return _ControllerID;
            }
            set
            {
                OnControllerIDChanging(value);
                ReportPropertyChanging("ControllerID");
                _ControllerID = StructuralObject.SetValidValue(value, "ControllerID");
                ReportPropertyChanged("ControllerID");
                OnControllerIDChanged();
            }
        }
        private global::System.Int32 _ControllerID;
        partial void OnControllerIDChanging(global::System.Int32 value);
        partial void OnControllerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoorModeTypeID
        {
            get
            {
                return _DoorModeTypeID;
            }
            set
            {
                OnDoorModeTypeIDChanging(value);
                ReportPropertyChanging("DoorModeTypeID");
                _DoorModeTypeID = StructuralObject.SetValidValue(value, "DoorModeTypeID");
                ReportPropertyChanged("DoorModeTypeID");
                OnDoorModeTypeIDChanged();
            }
        }
        private global::System.Int32 _DoorModeTypeID;
        partial void OnDoorModeTypeIDChanging(global::System.Int32 value);
        partial void OnDoorModeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleID
        {
            get
            {
                return _ScheduleID;
            }
            set
            {
                OnScheduleIDChanging(value);
                ReportPropertyChanging("ScheduleID");
                _ScheduleID = StructuralObject.SetValidValue(value, "ScheduleID");
                ReportPropertyChanged("ScheduleID");
                OnScheduleIDChanged();
            }
        }
        private global::System.Int32 _ScheduleID;
        partial void OnScheduleIDChanging(global::System.Int32 value);
        partial void OnScheduleIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Doors_Controllers", "Controllers")]
        public Controllers Controllers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Controllers>("conPassModel.FK_Doors_Controllers", "Controllers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Controllers>("conPassModel.FK_Doors_Controllers", "Controllers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Controllers> ControllersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Controllers>("conPassModel.FK_Doors_Controllers", "Controllers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Controllers>("conPassModel.FK_Doors_Controllers", "Controllers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Doors_DoorModeTypes", "DoorModeTypes")]
        public DoorModeTypes DoorModeTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DoorModeTypes>("conPassModel.FK_Doors_DoorModeTypes", "DoorModeTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DoorModeTypes>("conPassModel.FK_Doors_DoorModeTypes", "DoorModeTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DoorModeTypes> DoorModeTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DoorModeTypes>("conPassModel.FK_Doors_DoorModeTypes", "DoorModeTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DoorModeTypes>("conPassModel.FK_Doors_DoorModeTypes", "DoorModeTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Doors_Schedules", "Schedules")]
        public Schedules Schedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedules>("conPassModel.FK_Doors_Schedules", "Schedules").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedules>("conPassModel.FK_Doors_Schedules", "Schedules").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Schedules> SchedulesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedules>("conPassModel.FK_Doors_Schedules", "Schedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Schedules>("conPassModel.FK_Doors_Schedules", "Schedules", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "AccessGroupDoors", "AccessGroups")]
        public EntityCollection<AccessGroups> AccessGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessGroups>("conPassModel.AccessGroupDoors", "AccessGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessGroups>("conPassModel.AccessGroupDoors", "AccessGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "DoorGroupDoors", "DoorGroups")]
        public EntityCollection<DoorGroups> DoorGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DoorGroups>("conPassModel.DoorGroupDoors", "DoorGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DoorGroups>("conPassModel.DoorGroupDoors", "DoorGroups", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="EmployeeTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EmployeeTypes CreateEmployeeTypes(global::System.Int32 id, global::System.String name)
        {
            EmployeeTypes employeeTypes = new EmployeeTypes();
            employeeTypes.ID = id;
            employeeTypes.Name = name;
            return employeeTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Persons_EmployeeTypes", "Persons")]
        public EntityCollection<Persons> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Persons>("conPassModel.FK_Persons_EmployeeTypes", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Persons>("conPassModel.FK_Persons_EmployeeTypes", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Events object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="eventTime">Initial value of the EventTime property.</param>
        /// <param name="eventTypeID">Initial value of the EventTypeID property.</param>
        /// <param name="doorID">Initial value of the DoorID property.</param>
        /// <param name="doorName">Initial value of the DoorName property.</param>
        public static Events CreateEvents(global::System.Int32 id, global::System.DateTime eventTime, global::System.Int32 eventTypeID, global::System.Int32 doorID, global::System.String doorName)
        {
            Events events = new Events();
            events.ID = id;
            events.EventTime = eventTime;
            events.EventTypeID = eventTypeID;
            events.DoorID = doorID;
            events.DoorName = doorName;
            return events;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventTime
        {
            get
            {
                return _EventTime;
            }
            set
            {
                OnEventTimeChanging(value);
                ReportPropertyChanging("EventTime");
                _EventTime = StructuralObject.SetValidValue(value, "EventTime");
                ReportPropertyChanged("EventTime");
                OnEventTimeChanged();
            }
        }
        private global::System.DateTime _EventTime;
        partial void OnEventTimeChanging(global::System.DateTime value);
        partial void OnEventTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeID
        {
            get
            {
                return _EventTypeID;
            }
            set
            {
                OnEventTypeIDChanging(value);
                ReportPropertyChanging("EventTypeID");
                _EventTypeID = StructuralObject.SetValidValue(value, "EventTypeID");
                ReportPropertyChanged("EventTypeID");
                OnEventTypeIDChanged();
            }
        }
        private global::System.Int32 _EventTypeID;
        partial void OnEventTypeIDChanging(global::System.Int32 value);
        partial void OnEventTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoorID
        {
            get
            {
                return _DoorID;
            }
            set
            {
                OnDoorIDChanging(value);
                ReportPropertyChanging("DoorID");
                _DoorID = StructuralObject.SetValidValue(value, "DoorID");
                ReportPropertyChanged("DoorID");
                OnDoorIDChanged();
            }
        }
        private global::System.Int32 _DoorID;
        partial void OnDoorIDChanging(global::System.Int32 value);
        partial void OnDoorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DoorName
        {
            get
            {
                return _DoorName;
            }
            set
            {
                OnDoorNameChanging(value);
                ReportPropertyChanging("DoorName");
                _DoorName = StructuralObject.SetValidValue(value, false, "DoorName");
                ReportPropertyChanged("DoorName");
                OnDoorNameChanged();
            }
        }
        private global::System.String _DoorName;
        partial void OnDoorNameChanging(global::System.String value);
        partial void OnDoorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonID;
        partial void OnPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonName
        {
            get
            {
                return _PersonName;
            }
            set
            {
                OnPersonNameChanging(value);
                ReportPropertyChanging("PersonName");
                _PersonName = StructuralObject.SetValidValue(value, true, "PersonName");
                ReportPropertyChanged("PersonName");
                OnPersonNameChanged();
            }
        }
        private global::System.String _PersonName;
        partial void OnPersonNameChanging(global::System.String value);
        partial void OnPersonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SiteCode
        {
            get
            {
                return _SiteCode;
            }
            set
            {
                OnSiteCodeChanging(value);
                ReportPropertyChanging("SiteCode");
                _SiteCode = StructuralObject.SetValidValue(value, "SiteCode");
                ReportPropertyChanged("SiteCode");
                OnSiteCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _SiteCode;
        partial void OnSiteCodeChanging(Nullable<global::System.Int32> value);
        partial void OnSiteCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CardNumber
        {
            get
            {
                return _CardNumber;
            }
            set
            {
                OnCardNumberChanging(value);
                ReportPropertyChanging("CardNumber");
                _CardNumber = StructuralObject.SetValidValue(value, "CardNumber");
                ReportPropertyChanged("CardNumber");
                OnCardNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _CardNumber;
        partial void OnCardNumberChanging(Nullable<global::System.Int32> value);
        partial void OnCardNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Events_EventTypes", "EventTypes")]
        public EventTypes EventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("conPassModel.FK_Events_EventTypes", "EventTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("conPassModel.FK_Events_EventTypes", "EventTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventTypes> EventTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("conPassModel.FK_Events_EventTypes", "EventTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventTypes>("conPassModel.FK_Events_EventTypes", "EventTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="EventTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EventTypes CreateEventTypes(global::System.Int32 id, global::System.String name)
        {
            EventTypes eventTypes = new EventTypes();
            eventTypes.ID = id;
            eventTypes.Name = name;
            return eventTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Events_EventTypes", "Events")]
        public EntityCollection<Events> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Events>("conPassModel.FK_Events_EventTypes", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Events>("conPassModel.FK_Events_EventTypes", "Events", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="Persons")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Persons : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Persons object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="employeeTypeID">Initial value of the EmployeeTypeID property.</param>
        /// <param name="roleTypeID">Initial value of the RoleTypeID property.</param>
        /// <param name="isDisabled">Initial value of the IsDisabled property.</param>
        public static Persons CreatePersons(global::System.Int32 id, global::System.String lastName, global::System.Int32 departmentID, global::System.Int32 employeeTypeID, global::System.Int32 roleTypeID, global::System.Int32 isDisabled)
        {
            Persons persons = new Persons();
            persons.ID = id;
            persons.LastName = lastName;
            persons.DepartmentID = departmentID;
            persons.EmployeeTypeID = employeeTypeID;
            persons.RoleTypeID = roleTypeID;
            persons.IsDisabled = isDisabled;
            return persons;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthdayDate
        {
            get
            {
                return _BirthdayDate;
            }
            set
            {
                OnBirthdayDateChanging(value);
                ReportPropertyChanging("BirthdayDate");
                _BirthdayDate = StructuralObject.SetValidValue(value, "BirthdayDate");
                ReportPropertyChanged("BirthdayDate");
                OnBirthdayDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthdayDate;
        partial void OnBirthdayDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdayDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value, "DepartmentID");
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeTypeID
        {
            get
            {
                return _EmployeeTypeID;
            }
            set
            {
                OnEmployeeTypeIDChanging(value);
                ReportPropertyChanging("EmployeeTypeID");
                _EmployeeTypeID = StructuralObject.SetValidValue(value, "EmployeeTypeID");
                ReportPropertyChanged("EmployeeTypeID");
                OnEmployeeTypeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeTypeID;
        partial void OnEmployeeTypeIDChanging(global::System.Int32 value);
        partial void OnEmployeeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonalID
        {
            get
            {
                return _PersonalID;
            }
            set
            {
                OnPersonalIDChanging(value);
                ReportPropertyChanging("PersonalID");
                _PersonalID = StructuralObject.SetValidValue(value, true, "PersonalID");
                ReportPropertyChanged("PersonalID");
                OnPersonalIDChanged();
            }
        }
        private global::System.String _PersonalID;
        partial void OnPersonalIDChanging(global::System.String value);
        partial void OnPersonalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleTypeID
        {
            get
            {
                return _RoleTypeID;
            }
            set
            {
                OnRoleTypeIDChanging(value);
                ReportPropertyChanging("RoleTypeID");
                _RoleTypeID = StructuralObject.SetValidValue(value, "RoleTypeID");
                ReportPropertyChanged("RoleTypeID");
                OnRoleTypeIDChanged();
            }
        }
        private global::System.Int32 _RoleTypeID;
        partial void OnRoleTypeIDChanging(global::System.Int32 value);
        partial void OnRoleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, true, "Login");
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IsDisabled
        {
            get
            {
                return _IsDisabled;
            }
            set
            {
                OnIsDisabledChanging(value);
                ReportPropertyChanging("IsDisabled");
                _IsDisabled = StructuralObject.SetValidValue(value, "IsDisabled");
                ReportPropertyChanged("IsDisabled");
                OnIsDisabledChanged();
            }
        }
        private global::System.Int32 _IsDisabled;
        partial void OnIsDisabledChanging(global::System.Int32 value);
        partial void OnIsDisabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActivationDate
        {
            get
            {
                return _ActivationDate;
            }
            set
            {
                OnActivationDateChanging(value);
                ReportPropertyChanging("ActivationDate");
                _ActivationDate = StructuralObject.SetValidValue(value, "ActivationDate");
                ReportPropertyChanged("ActivationDate");
                OnActivationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActivationDate;
        partial void OnActivationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActivationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value, "ExpiryDate");
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiryDate;
        partial void OnExpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTemplate
        {
            get
            {
                return _IsTemplate;
            }
            set
            {
                OnIsTemplateChanging(value);
                ReportPropertyChanging("IsTemplate");
                _IsTemplate = StructuralObject.SetValidValue(value, "IsTemplate");
                ReportPropertyChanged("IsTemplate");
                OnIsTemplateChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTemplate;
        partial void OnIsTemplateChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTemplateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsGuest
        {
            get
            {
                return _IsGuest;
            }
            set
            {
                OnIsGuestChanging(value);
                ReportPropertyChanging("IsGuest");
                _IsGuest = StructuralObject.SetValidValue(value, "IsGuest");
                ReportPropertyChanged("IsGuest");
                OnIsGuestChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsGuest;
        partial void OnIsGuestChanging(Nullable<global::System.Boolean> value);
        partial void OnIsGuestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentID
        {
            get
            {
                return _DocumentID;
            }
            set
            {
                OnDocumentIDChanging(value);
                ReportPropertyChanging("DocumentID");
                _DocumentID = StructuralObject.SetValidValue(value, "DocumentID");
                ReportPropertyChanged("DocumentID");
                OnDocumentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentID;
        partial void OnDocumentIDChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Cards_Persons", "Cards")]
        public EntityCollection<Cards> Cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cards>("conPassModel.FK_Cards_Persons", "Cards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cards>("conPassModel.FK_Cards_Persons", "Cards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Persons_Departments", "Departments")]
        public Departments Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Departments>("conPassModel.FK_Persons_Departments", "Departments").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Departments>("conPassModel.FK_Persons_Departments", "Departments").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Departments> DepartmentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Departments>("conPassModel.FK_Persons_Departments", "Departments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Departments>("conPassModel.FK_Persons_Departments", "Departments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Persons_EmployeeTypes", "EmployeeTypes")]
        public EmployeeTypes EmployeeTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTypes>("conPassModel.FK_Persons_EmployeeTypes", "EmployeeTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTypes>("conPassModel.FK_Persons_EmployeeTypes", "EmployeeTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeTypes> EmployeeTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeTypes>("conPassModel.FK_Persons_EmployeeTypes", "EmployeeTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeTypes>("conPassModel.FK_Persons_EmployeeTypes", "EmployeeTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Persons_RoleTypes", "RoleTypes")]
        public RoleTypes RoleTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleTypes>("conPassModel.FK_Persons_RoleTypes", "RoleTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleTypes>("conPassModel.FK_Persons_RoleTypes", "RoleTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoleTypes> RoleTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoleTypes>("conPassModel.FK_Persons_RoleTypes", "RoleTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoleTypes>("conPassModel.FK_Persons_RoleTypes", "RoleTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "PersonAccessGroups", "AccessGroups")]
        public EntityCollection<AccessGroups> AccessGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccessGroups>("conPassModel.PersonAccessGroups", "AccessGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccessGroups>("conPassModel.PersonAccessGroups", "AccessGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Persons_Documents", "Documents")]
        public Documents Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Documents>("conPassModel.FK_Persons_Documents", "Documents").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Documents>("conPassModel.FK_Persons_Documents", "Documents").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Documents> DocumentsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Documents>("conPassModel.FK_Persons_Documents", "Documents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Documents>("conPassModel.FK_Persons_Documents", "Documents", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="RoleTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static RoleTypes CreateRoleTypes(global::System.Int32 id, global::System.String name)
        {
            RoleTypes roleTypes = new RoleTypes();
            roleTypes.ID = id;
            roleTypes.Name = name;
            return roleTypes;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Persons_RoleTypes", "Persons")]
        public EntityCollection<Persons> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Persons>("conPassModel.FK_Persons_RoleTypes", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Persons>("conPassModel.FK_Persons_RoleTypes", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="ScheduleRanges")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleRanges : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduleRanges object.
        /// </summary>
        /// <param name="scheduleID">Initial value of the ScheduleID property.</param>
        /// <param name="dayOfWeek">Initial value of the DayOfWeek property.</param>
        /// <param name="beginTime">Initial value of the BeginTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        public static ScheduleRanges CreateScheduleRanges(global::System.Int32 scheduleID, global::System.Int32 dayOfWeek, global::System.TimeSpan beginTime, global::System.TimeSpan endTime)
        {
            ScheduleRanges scheduleRanges = new ScheduleRanges();
            scheduleRanges.ScheduleID = scheduleID;
            scheduleRanges.DayOfWeek = dayOfWeek;
            scheduleRanges.BeginTime = beginTime;
            scheduleRanges.EndTime = endTime;
            return scheduleRanges;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleID
        {
            get
            {
                return _ScheduleID;
            }
            set
            {
                if (_ScheduleID != value)
                {
                    OnScheduleIDChanging(value);
                    ReportPropertyChanging("ScheduleID");
                    _ScheduleID = StructuralObject.SetValidValue(value, "ScheduleID");
                    ReportPropertyChanged("ScheduleID");
                    OnScheduleIDChanged();
                }
            }
        }
        private global::System.Int32 _ScheduleID;
        partial void OnScheduleIDChanging(global::System.Int32 value);
        partial void OnScheduleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DayOfWeek
        {
            get
            {
                return _DayOfWeek;
            }
            set
            {
                if (_DayOfWeek != value)
                {
                    OnDayOfWeekChanging(value);
                    ReportPropertyChanging("DayOfWeek");
                    _DayOfWeek = StructuralObject.SetValidValue(value, "DayOfWeek");
                    ReportPropertyChanged("DayOfWeek");
                    OnDayOfWeekChanged();
                }
            }
        }
        private global::System.Int32 _DayOfWeek;
        partial void OnDayOfWeekChanging(global::System.Int32 value);
        partial void OnDayOfWeekChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan BeginTime
        {
            get
            {
                return _BeginTime;
            }
            set
            {
                if (_BeginTime != value)
                {
                    OnBeginTimeChanging(value);
                    ReportPropertyChanging("BeginTime");
                    _BeginTime = StructuralObject.SetValidValue(value, "BeginTime");
                    ReportPropertyChanged("BeginTime");
                    OnBeginTimeChanged();
                }
            }
        }
        private global::System.TimeSpan _BeginTime;
        partial void OnBeginTimeChanging(global::System.TimeSpan value);
        partial void OnBeginTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                if (_EndTime != value)
                {
                    OnEndTimeChanging(value);
                    ReportPropertyChanging("EndTime");
                    _EndTime = StructuralObject.SetValidValue(value, "EndTime");
                    ReportPropertyChanged("EndTime");
                    OnEndTimeChanged();
                }
            }
        }
        private global::System.TimeSpan _EndTime;
        partial void OnEndTimeChanging(global::System.TimeSpan value);
        partial void OnEndTimeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_ScheduleRanges_Schedules", "Schedules")]
        public Schedules Schedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedules>("conPassModel.FK_ScheduleRanges_Schedules", "Schedules").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedules>("conPassModel.FK_ScheduleRanges_Schedules", "Schedules").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Schedules> SchedulesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Schedules>("conPassModel.FK_ScheduleRanges_Schedules", "Schedules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Schedules>("conPassModel.FK_ScheduleRanges_Schedules", "Schedules", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="Schedules")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Schedules : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Schedules object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Schedules CreateSchedules(global::System.Int32 id, global::System.String name)
        {
            Schedules schedules = new Schedules();
            schedules.ID = id;
            schedules.Name = name;
            return schedules;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_Doors_Schedules", "Doors")]
        public EntityCollection<Doors> Doors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doors>("conPassModel.FK_Doors_Schedules", "Doors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doors>("conPassModel.FK_Doors_Schedules", "Doors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_ScheduleRanges_Schedules", "ScheduleRanges")]
        public EntityCollection<ScheduleRanges> ScheduleRanges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScheduleRanges>("conPassModel.FK_ScheduleRanges_Schedules", "ScheduleRanges");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScheduleRanges>("conPassModel.FK_ScheduleRanges_Schedules", "ScheduleRanges", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="VerifyMessages")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VerifyMessages : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VerifyMessages object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="verifyResultID">Initial value of the VerifyResultID property.</param>
        /// <param name="controllerTypeID">Initial value of the ControllerTypeID property.</param>
        /// <param name="controllerID">Initial value of the ControllerID property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static VerifyMessages CreateVerifyMessages(global::System.Int32 id, global::System.Int32 verifyResultID, global::System.Int32 controllerTypeID, global::System.Int32 controllerID, global::System.String message)
        {
            VerifyMessages verifyMessages = new VerifyMessages();
            verifyMessages.ID = id;
            verifyMessages.VerifyResultID = verifyResultID;
            verifyMessages.ControllerTypeID = controllerTypeID;
            verifyMessages.ControllerID = controllerID;
            verifyMessages.Message = message;
            return verifyMessages;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VerifyResultID
        {
            get
            {
                return _VerifyResultID;
            }
            set
            {
                OnVerifyResultIDChanging(value);
                ReportPropertyChanging("VerifyResultID");
                _VerifyResultID = StructuralObject.SetValidValue(value, "VerifyResultID");
                ReportPropertyChanged("VerifyResultID");
                OnVerifyResultIDChanged();
            }
        }
        private global::System.Int32 _VerifyResultID;
        partial void OnVerifyResultIDChanging(global::System.Int32 value);
        partial void OnVerifyResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ControllerTypeID
        {
            get
            {
                return _ControllerTypeID;
            }
            set
            {
                OnControllerTypeIDChanging(value);
                ReportPropertyChanging("ControllerTypeID");
                _ControllerTypeID = StructuralObject.SetValidValue(value, "ControllerTypeID");
                ReportPropertyChanged("ControllerTypeID");
                OnControllerTypeIDChanged();
            }
        }
        private global::System.Int32 _ControllerTypeID;
        partial void OnControllerTypeIDChanging(global::System.Int32 value);
        partial void OnControllerTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ControllerID
        {
            get
            {
                return _ControllerID;
            }
            set
            {
                OnControllerIDChanging(value);
                ReportPropertyChanging("ControllerID");
                _ControllerID = StructuralObject.SetValidValue(value, "ControllerID");
                ReportPropertyChanged("ControllerID");
                OnControllerIDChanged();
            }
        }
        private global::System.Int32 _ControllerID;
        partial void OnControllerIDChanging(global::System.Int32 value);
        partial void OnControllerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false, "Message");
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_VerifyMessages_Controllers", "Controllers")]
        public Controllers Controllers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Controllers>("conPassModel.FK_VerifyMessages_Controllers", "Controllers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Controllers>("conPassModel.FK_VerifyMessages_Controllers", "Controllers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Controllers> ControllersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Controllers>("conPassModel.FK_VerifyMessages_Controllers", "Controllers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Controllers>("conPassModel.FK_VerifyMessages_Controllers", "Controllers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_VerifyMessages_ControllerTypes", "ControllerTypes")]
        public ControllerTypes ControllerTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ControllerTypes>("conPassModel.FK_VerifyMessages_ControllerTypes", "ControllerTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ControllerTypes>("conPassModel.FK_VerifyMessages_ControllerTypes", "ControllerTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ControllerTypes> ControllerTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ControllerTypes>("conPassModel.FK_VerifyMessages_ControllerTypes", "ControllerTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ControllerTypes>("conPassModel.FK_VerifyMessages_ControllerTypes", "ControllerTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_VerifyMessages_VerifyResults", "VerifyResults")]
        public VerifyResults VerifyResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VerifyResults>("conPassModel.FK_VerifyMessages_VerifyResults", "VerifyResults").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VerifyResults>("conPassModel.FK_VerifyMessages_VerifyResults", "VerifyResults").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VerifyResults> VerifyResultsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VerifyResults>("conPassModel.FK_VerifyMessages_VerifyResults", "VerifyResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VerifyResults>("conPassModel.FK_VerifyMessages_VerifyResults", "VerifyResults", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="conPassModel", Name="VerifyResults")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VerifyResults : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VerifyResults object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reportDate">Initial value of the ReportDate property.</param>
        /// <param name="result">Initial value of the Result property.</param>
        public static VerifyResults CreateVerifyResults(global::System.Int32 id, global::System.DateTime reportDate, global::System.Int32 result)
        {
            VerifyResults verifyResults = new VerifyResults();
            verifyResults.ID = id;
            verifyResults.ReportDate = reportDate;
            verifyResults.Result = result;
            return verifyResults;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReportDate
        {
            get
            {
                return _ReportDate;
            }
            set
            {
                OnReportDateChanging(value);
                ReportPropertyChanging("ReportDate");
                _ReportDate = StructuralObject.SetValidValue(value, "ReportDate");
                ReportPropertyChanged("ReportDate");
                OnReportDateChanged();
            }
        }
        private global::System.DateTime _ReportDate;
        partial void OnReportDateChanging(global::System.DateTime value);
        partial void OnReportDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, "Result");
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.Int32 _Result;
        partial void OnResultChanging(global::System.Int32 value);
        partial void OnResultChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("conPassModel", "FK_VerifyMessages_VerifyResults", "VerifyMessages")]
        public EntityCollection<VerifyMessages> VerifyMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<VerifyMessages>("conPassModel.FK_VerifyMessages_VerifyResults", "VerifyMessages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<VerifyMessages>("conPassModel.FK_VerifyMessages_VerifyResults", "VerifyMessages", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
