<UserControl x:Class="Ester.Modules.Schedule.View.ScheduleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Converters="clr-namespace:Ester.Model.Converters;assembly=Ester.Model"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:ViewModel="clr-namespace:Ester.Modules.Schedule.ViewModel"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Enums="clr-namespace:EsterCommon.Enums;assembly=EsterCommon" mc:Ignorable="d"
			 Name="ScheduleViewControl"
             >
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Ester.Model;component/Styles/Button.xaml"/>
				<ResourceDictionary Source="/Ester.Model;component/Styles/ListView.xaml"/>
				<ResourceDictionary Source="/Ester.Model;component/Styles/ToggleButton.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type System:Enum}" x:Key="ScheduleTypesNames">
				<ObjectDataProvider.MethodParameters>
					<x:Type TypeName="Enums:ScheduleTypes" />
				</ObjectDataProvider.MethodParameters>
			</ObjectDataProvider>

			<ViewModel:TimeSpanToDoubleConverter x:Key="WidthConverter"/>
			<ViewModel:NumToMarginConverter x:Key="MarginConverter"/>
			<ViewModel:IntToDayOfWeekConverter x:Key="IntToDayOfWeekConverter" />
			<ViewModel:ScheduleTypeToStringConverter x:Key="ScheduleTypeToString" />
			<ViewModel:ScheduleTemplateSelector x:Key="ScheduleTemplateSelector" />
			<ViewModel:BinaryToStringConverter x:Key="SkudValueConverter" />
			<ViewModel:ValueTimeSpanVisibilityConverter x:Key="ValueTimeSpanVisibility" />

			<Converters:ValueToBrushConverter x:Key="ValueToBrushConverter" />
			<Converters:ACLevelConverter x:Key="AcLevelConverter" />
			<Converters:VentilationLevelConverter x:Key="VentilationLevelConverter" />
			

			<CollectionViewSource x:Key="SchedulesGroupedSource" Source="{Binding Schedules}">
				<CollectionViewSource.GroupDescriptions>
					<PropertyGroupDescription PropertyName="Type" Converter="{StaticResource ScheduleTypeToString}" />
				</CollectionViewSource.GroupDescriptions>
			</CollectionViewSource>

			<DataTemplate x:Key="LigthEditorTemplate">
				<StackPanel>
					<Border HorizontalAlignment="Stretch" Background="{Binding Value, Mode=OneWay, Converter={StaticResource ValueToBrushConverter}, ConverterParameter=LightLevel}" MouseMove="TimeSpanMouseMove" MouseEnter="TimeSpanMouseEnter" MouseLeave="TimeSpanMouseLeave" Height="20"
						MouseLeftButtonUp="TimeSpanLeftMouseUp" Opacity="0.7">
						<TextBlock Text="{Binding Path=Value, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<Slider HorizontalAlignment="Stretch" MaxWidth="100" Minimum="0" Maximum="100" TickFrequency="1" IsSnapToTickEnabled="True" 
							Value="{Binding Path=Value, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" />
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="SKUDEditorTemplate">
				<StackPanel>
					<Border HorizontalAlignment="Stretch" Background="{Binding Value, Mode=OneWay, Converter={StaticResource ValueToBrushConverter}, ConverterParameter=SKUDSwitch}" MouseMove="TimeSpanMouseMove" MouseEnter="TimeSpanMouseEnter" MouseLeave="TimeSpanMouseLeave" Height="20"
						MouseLeftButtonUp="TimeSpanLeftMouseUp" Opacity="0.7">
						<TextBlock Text="{Binding Path=Value, Mode=OneWay, Converter={StaticResource SkudValueConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<CheckBox IsChecked="{Binding Path=Value, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" Style="{StaticResource FlipSwitchButton}" Width="25" Margin="2"/>
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="HeatEditorTemplate">
				<StackPanel>
					<Border HorizontalAlignment="Stretch" Background="{Binding Value, Converter={StaticResource ValueToBrushConverter}, ConverterParameter=Temperature}" MouseMove="TimeSpanMouseMove" MouseEnter="TimeSpanMouseEnter" MouseLeave="TimeSpanMouseLeave" Height="20"
						MouseLeftButtonUp="TimeSpanLeftMouseUp" Opacity="0.7">
						<TextBlock Text="{Binding Path=Value, Mode=OneWay, StringFormat={}{0:00.0°C}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<Slider HorizontalAlignment="Stretch" MaxWidth="100" Minimum="16" Maximum="28" TickFrequency="0.5" TickPlacement="TopLeft" IsSnapToTickEnabled="True" 
						Value="{Binding Path=Value, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" />
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="VentilationEditorTemplate">
				<StackPanel>
					<Border HorizontalAlignment="Stretch" Background="{Binding Value, Converter={StaticResource ValueToBrushConverter}, ConverterParameter=Ventilation}" MouseMove="TimeSpanMouseMove" MouseEnter="TimeSpanMouseEnter" MouseLeave="TimeSpanMouseLeave" Height="20"
						MouseLeftButtonUp="TimeSpanLeftMouseUp" Opacity="0.7">
						<TextBlock Text="{Binding Path=Value, Mode=OneWay, Converter={StaticResource VentilationLevelConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<Slider Minimum="-3" Maximum="3" TickFrequency="1" TickPlacement="TopLeft" IsSnapToTickEnabled="True" HorizontalAlignment="Stretch" MaxWidth="100"
						Value="{Binding Path=Value, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" />
				</StackPanel>
			</DataTemplate>
			<DataTemplate x:Key="ACEditorTemplate">
				<StackPanel>
					<Border HorizontalAlignment="Stretch" Background="{Binding Value, Converter={StaticResource ValueToBrushConverter}, ConverterParameter=AC}" MouseMove="TimeSpanMouseMove" MouseEnter="TimeSpanMouseEnter" MouseLeave="TimeSpanMouseLeave" Height="20"
						MouseLeftButtonUp="TimeSpanLeftMouseUp" Opacity="0.7">
						<TextBlock Text="{Binding Path=Value, Mode=OneWay, Converter={StaticResource AcLevelConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
					</Border>
					<Slider Minimum="0" Maximum="4" TickFrequency="1" TickPlacement="TopLeft" IsSnapToTickEnabled="True" HorizontalAlignment="Stretch" MaxWidth="100"
						Value="{Binding Path=Value, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" />
				</StackPanel>
			</DataTemplate>
		</ResourceDictionary>
	</UserControl.Resources>

	<xctk:BusyIndicator IsBusy="{Binding IsBusy}">
		<xctk:BusyIndicator.BusyContentTemplate >
			<DataTemplate>
				<TextBlock>Подождите</TextBlock>
			</DataTemplate>
		</xctk:BusyIndicator.BusyContentTemplate>
		<DockPanel LastChildFill="True" Margin="10,40,0,0">
			<Grid DockPanel.Dock="Left" VerticalAlignment="Stretch" Margin="10">
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="auto"/>
				</Grid.RowDefinitions>

				<ListView ItemsSource="{Binding Source={StaticResource SchedulesGroupedSource}}" Grid.Row="0" VerticalAlignment="Stretch" 
						SelectedItem="{Binding SelectedSchedule, Mode=TwoWay}" IsSynchronizedWithCurrentItem="True">
					<ListView.GroupStyle>
						<GroupStyle>
							<GroupStyle.ContainerStyle>
								<Style TargetType="{x:Type GroupItem}">
									<Setter Property="Margin" Value="5,5" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type GroupItem}">
												<StackPanel>
													<TextBlock Text="{Binding Path=Name }" />
													<ItemsPresenter />
												</StackPanel>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</GroupStyle.ContainerStyle>
						</GroupStyle>
					</ListView.GroupStyle>
					<ListView.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Name}" />
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>

				<DockPanel Height="100" VerticalAlignment="Bottom" Grid.Row="1">

					<StackPanel Orientation="Vertical" VerticalAlignment="Center">
						<TextBlock Margin="5" FontSize="18" FontFamily="Segoe UI" Text="Добавить расписание"/>
						<ComboBox ItemsSource="{Binding Source={StaticResource ScheduleTypesNames}}" SelectedItem="{Binding SelectedScheduleType, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" HorizontalAlignment="Stretch">
							<ComboBox.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Binding ., Converter={StaticResource ScheduleTypeToString}}" />
								</DataTemplate>
							</ComboBox.ItemTemplate>
						</ComboBox>
						<TextBox HorizontalAlignment="Stretch" Margin="5" Name="NewScheduleName" />
					</StackPanel>
					<Button DockPanel.Dock="Right" Height="50" VerticalAlignment="Center" Style="{DynamicResource ResourceKey=AddButton}"
					Command="{Binding AddScheduleCommand}" CommandParameter="{Binding ElementName=NewScheduleName, Path=Text}" />
				</DockPanel>
			</Grid>
			<Grid Background="Transparent">
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="42"/>
				</Grid.RowDefinitions>
				<StackPanel Orientation="Vertical" Name="Stack" Background="Transparent" >
					<TextBox Margin="0,0,0,20" HorizontalAlignment="Center" Foreground="DarkGray" FontSize="30" FontFamily="Segoe UI" 
					Text="{Binding Path=CurrentSchedule.Name, Mode=TwoWay}"/>
					<Grid Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="40" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition />
						</Grid.RowDefinitions>
						<Viewbox Name="Ruler" Grid.Row="0" Grid.Column="1">
							<Grid HorizontalAlignment="Stretch">
								<Grid.RowDefinitions>
									<RowDefinition Height="15"/>
									<RowDefinition Height="30"/>
								</Grid.RowDefinitions>
								<ItemsControl ItemsSource="{Binding DayTimeSpans, Mode=OneTime}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<Grid />
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding ., StringFormat={}{0:00}:00}" Margin="{Binding ., Converter={StaticResource MarginConverter}}" 
												Width="40" Grid.Row="0" TextAlignment="Center" HorizontalAlignment="Left" />
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
								<Path Stroke="Black" SnapsToDevicePixels="False" Height="20" Width="1440" Grid.Row="1" Margin="20,0"
											Data="
												M 0,0 H 1440 z
												M 0,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z
													m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z m 60,0 V 15 z
												M 30,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z
													m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z m 60,0 V 9 z
												M 5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z
												m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m10,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z m5,0 V3 z" 
											/>
							</Grid>
						</Viewbox>
						<ItemsControl Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding Path=CurrentSchedule.DaySchedules}" HorizontalAlignment="Stretch" Background="Transparent" >
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Vertical" Background="Transparent" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Grid Background="Transparent" >
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="40" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<TextBlock Text="{Binding Path=Day, Converter={StaticResource IntToDayOfWeekConverter}}" Grid.Column="0" Grid.IsSharedSizeScope="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
										<Viewbox Grid.Column="1" Stretch="Fill" HorizontalAlignment="Stretch" >
											<Grid Margin="20,0,20,0" Background="Transparent" Name="ScheduleDayGrid">
												<Canvas HorizontalAlignment="Stretch" VerticalAlignment="Top"  >
													<Grid Margin="-19,0,0,0" HorizontalAlignment="Center" Width="40" VerticalAlignment="Top"
														Visibility="{Binding Path=TooltipVisibility, Mode=OneWay}" Canvas.Left="{Binding Left, Mode=OneWay}">
														<Path Data="F1 M0,0 H20 L10,20 Z M 0,100 H 20 L10,80 Z" Stretch="Fill" Stroke="Black" Fill="Black" Height="20" Width="8" VerticalAlignment="Top" Margin="0,15,0,0"/>
														<TextBlock Text="{Binding Path=Time, Mode=OneWay, StringFormat=\{0:hh\\:mm\}}" HorizontalAlignment="Center" VerticalAlignment="Top"/>
													</Grid>
												</Canvas>
												<ItemsControl ItemsSource="{Binding Path=Spans}" Background="Transparent" VerticalAlignment="Top">
													<ItemsControl.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Background="Transparent" />
														</ItemsPanelTemplate>
													</ItemsControl.ItemsPanel>
													<ItemsControl.ItemTemplate>
														<DataTemplate>
															<Grid HorizontalAlignment="Left" Name="ThumbGrid" VerticalAlignment="Top" Margin="0,15,0,0" Background="Transparent" 
																Width="{Binding Length, Mode=TwoWay, Converter={StaticResource WidthConverter}}">
																<Border Background="Transparent" Width="66" Margin="-33,0,0,0" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top" Panel.ZIndex="50" 
																	Visibility="{Binding Start, Converter={StaticResource ValueTimeSpanVisibility}}">
																	<Thumb  Width="4" Height="20"  Margin="-2,0,0,0" Cursor="ScrollWE" DragDelta="TimeSpanDragDelta" />
																</Border>
																<ContentControl ContentTemplateSelector="{StaticResource ScheduleTemplateSelector}" Content="{Binding ., NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}" Panel.ZIndex="49"/>
																<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Width="40" Margin="-20,-15,0,0" VerticalAlignment="Top" Height="16" Visibility="{Binding Start, Converter={StaticResource ValueTimeSpanVisibility}}">
																	<TextBlock Text="{Binding Start, StringFormat=\{0:HH\\:mm\}}" HorizontalAlignment="Left" />
																	<Button Style="{StaticResource ClearButton}" Click="RemoveTimeValueSpanClick" HorizontalAlignment="Right" VerticalAlignment="Center" Width="14" Height="14"/>
																</StackPanel>
															</Grid>
														</DataTemplate>
													</ItemsControl.ItemTemplate>
												</ItemsControl>
											</Grid>
										</Viewbox>
									</Grid>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</Grid>
				</StackPanel>
				<StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
					<Button Style="{DynamicResource SaveRoundButton}" Command="{Binding SaveScheduleCommand}" Margin="8,1" />
					<Button Style="{DynamicResource CloseRoundButton}" Command="{Binding CancelCommand}" Margin="8,1" />
					<Button Style="{DynamicResource DeleteRoundButton}" Command="{Binding DropScheduleCommand}" Margin="8,1"  />
				</StackPanel>
			</Grid>
		</DockPanel>
	</xctk:BusyIndicator>
</UserControl>
